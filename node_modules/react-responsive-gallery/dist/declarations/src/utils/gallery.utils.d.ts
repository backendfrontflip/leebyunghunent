import { ScreenWidthSizes, GalleryWidthOptions, WidthOptions, MediaOrderOptions, GallerySizes, MediaElementProps, MediaCols, ExpandedMediaElementProps } from "../components/Gallery/Gallery.types";
import { ImageProps } from "components/Gallery/Image/Image.types";
import { VideoProps } from "components/Gallery/Video/Video.types";
declare const getOrderGroup: (width: number, userScreenWidthValues?: ScreenWidthSizes) => MediaOrderOptions;
declare const sortMediaByOrderGroup: (array: MediaElementProps[], width: number, userScreenWidthValues?: ScreenWidthSizes) => ExpandedMediaElementProps[];
declare const getSizeGroup: (width: number, userScreenWidthValues?: ScreenWidthSizes) => WidthOptions;
declare const isWidthGroupsDifferences: (oldWidth: number, newWidth: number, userScreenWidthValues?: ScreenWidthSizes) => boolean;
declare const getGallerySizes: (width: number, userValues?: GalleryWidthOptions) => GallerySizes;
declare const getMediaCols: (media: MediaElementProps[], numOfMediaPerRow: number) => MediaCols;
declare const getSelectedMedia: () => string[];
declare const isMediaSelected: (media: MediaElementProps, selectableMedia: string[]) => boolean;
declare const memoImage: (prev: ImageProps, next: ImageProps) => boolean;
declare const memoVideo: (prev: VideoProps, next: VideoProps) => boolean;
export { getGallerySizes, getSizeGroup, isWidthGroupsDifferences, sortMediaByOrderGroup, getOrderGroup, getMediaCols, getSelectedMedia, isMediaSelected, memoImage, memoVideo, };
